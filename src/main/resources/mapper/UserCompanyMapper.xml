<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="studio.jikewang.dao.UserCompanyDao">
    <!--<cache type="org.mybatis.caches.memcached.LoggingMemcachedCache"/>-->
    <sql id="base_query">
SELECT `usercompany`.`id`,
        `usercompany`.`company_id`,
        `usercompany`.`user_id`,
        `usercompany`.`position`,
             `usercompany`.`score`,
        company.`name` AS company_name,
        company.`number`,company.is_scored,
`user`.cls,`user`.userName
FROM `usercompany` ,`company`,`user`
WHERE `usercompany`.company_id=`company`.id AND `usercompany`.user_id = `user`.userId
    </sql>

    <!--<resultMap id="classNum" type="studio.jikewang.dto.ClassNum">-->
    <!--<result column="cls" jdbcType="VARCHAR" property="cls"/>-->
    <!--<result column="num" javaType="Integer" property="num"/>-->
    <!--</resultMap>-->

    <insert id="saveUserCompany" parameterType="userCompany">
        INSERT INTO `usercompany`(`company_id`,`user_id`,`position`)
        VALUES (#{companyId}, #{userId},#{position})
    </insert>

    <delete id="deleteUserCompany" parameterType="int">
        DELETE FROM `usercompany` WHERE `id` = #{_parameter}
    </delete>

    <delete id="deleteAllUserCompany" parameterType="int">
        DELETE FROM `usercompany` WHERE `company_id` = #{_parameter}
    </delete>

    <select id="listUserCompanies" parameterType="page" resultType="userInfo">
        <include refid="base_query"/>
    </select>

    <select id="listUserCompaniesByCompanyId" parameterType="page" resultType="userInfo">
        <include refid="base_query"/>
        AND `company_id` = #{object}
    </select>
    <select id="listUserCompaniesByUserId" parameterType="page" resultType="userInfo">
        <include refid="base_query"/>
        AND `user_id` = #{object}
    </select>
    <select id="getUserInfo" parameterType="int" resultType="userInfo">
        <include refid="base_query"/>
        AND `usercompany`.id = #{_parameter}
    </select>
    <select id="getUserCompany" parameterType="int" resultType="userCompany">
       SELECT `id`, `company_id`, `user_id`, `position`, `score`, `scored`
        FROM usercompany WHERE id = #{_parameter}
    </select>

    <update id="updateUserCompany" parameterType="userCompany">
        UPDATE `usercompany`
        <trim prefix="set" suffixOverrides=",">
            id = #{id},
            <if test="position!=null">`position`=#{position},</if>
            <if test="scored!=null">`scored`= #{scored},</if>
        </trim>
        WHERE `id`= #{id}
    </update>
    <select id="isTeacherScored" parameterType="string" resultType="int">
    SELECT (company.score!=0 AND  studentclass.score IS NOT NULL) AS flag FROM company,usercompany,studentclass
WHERE  usercompany.company_id = company.id
AND studentclass.user_id =#{_parameter} AND usercompany.user_id = #{_parameter}
</select>
    <update id="updateUserCompanyBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE `usercompany`
            <set>
                `score`= `score` + #{item.score}
            </set>
            where `id`= #{item.id}
        </foreach>
    </update>
</mapper>