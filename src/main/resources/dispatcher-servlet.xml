<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- DispatcherServlet上下文， 只管理@Controller类型的bean， 忽略其他型的bean, 如@Service -->
    <context:component-scan base-package="studio.jikewang.action">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:annotation-config/>
    <mvc:default-servlet-handler/>

    <!--跨域问题解决-->
    <mvc:cors>
        <mvc:mapping path="/**"/>
    </mvc:cors>

    <!-- 指定自己定义的validator -->
    <!--<mvc:annotation-driven validator="validator"/>-->

    <!--&lt;!&ndash; 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册&ndash;&gt;-->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
        <!--<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
        <!--&lt;!&ndash; 如果不加默认到 使用classpath下的 ValidationMessages.properties &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="validationMessageSource" ref="messageSource"/>&ndash;&gt;-->
    <!--</bean>-->

    <mvc:annotation-driven validator="validator">
    </mvc:annotation-driven>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <!--<property name="validationMessageSource" ref="messageSource"/>-->
    </bean>
    <!--<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
        <!--&lt;!&ndash;<property name="basenames">&ndash;&gt;-->
            <!--&lt;!&ndash;<list>&ndash;&gt;-->
                <!--&lt;!&ndash;&lt;!&ndash; 在web环境中一定要定位到classpath 否则默认到当前web应用下找  &ndash;&gt;&ndash;&gt;-->
                <!--&lt;!&ndash;<value>classpath:messages</value>&ndash;&gt;-->
            <!--&lt;!&ndash;</list>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
        <!--<property name="useCodeAsDefaultMessage" value="false"/>-->
        <!--<property name="defaultEncoding" value="UTF-8"/>-->
        <!--<property name="cacheSeconds" value="60"/>-->
    <!--</bean>-->
    <!--注册方法验证的后处理器-->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>

    <bean id="validationAdvice" class="studio.jikewang.util.ValidationAdvice" />
    <aop:config>
        <aop:pointcut id="validationPC" expression="execution(public * studio.jikewang.action.*.*(..))" />
        <aop:aspect id="validationAspect" ref="validationAdvice">
            <aop:around method="aroundMethod" pointcut-ref="validationPC" />
        </aop:aspect>
    </aop:config>

</beans>